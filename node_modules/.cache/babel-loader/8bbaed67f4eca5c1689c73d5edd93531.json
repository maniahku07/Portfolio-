{"ast":null,"code":"import _objectSpread from \"C:/Users/Manish/Desktop/Portfolio-Website-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nvar animateMotionValue = function animateMotionValue(valueName, value, target) {\n  var transition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return function (_onComplete) {\n    var valueTransition = getValueTransition(transition, valueName) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n\n    var delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n\n    var _transition$elapsed = transition.elapsed,\n        elapsed = _transition$elapsed === void 0 ? 0 : _transition$elapsed;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    var keyframes = getKeyframes(value, valueName, target, valueTransition);\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n\n    var originKeyframe = keyframes[0];\n    var targetKeyframe = keyframes[keyframes.length - 1];\n    var isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n    var isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n    warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \".concat(valueName, \" from \\\"\").concat(originKeyframe, \"\\\" to \\\"\").concat(targetKeyframe, \"\\\". \").concat(originKeyframe, \" is not an animatable value - to enable this animation set \").concat(originKeyframe, \" to a value animatable to \").concat(targetKeyframe, \" via the `style` property.\"));\n\n    var options = _objectSpread(_objectSpread({\n      keyframes: keyframes,\n      velocity: value.getVelocity(),\n      ease: \"easeOut\"\n    }, valueTransition), {}, {\n      delay: -elapsed,\n      onUpdate: function onUpdate(v) {\n        value.set(v);\n        valueTransition.onUpdate && valueTransition.onUpdate(v);\n      },\n      onComplete: function onComplete() {\n        _onComplete();\n\n        valueTransition.onComplete && valueTransition.onComplete();\n      }\n    });\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n\n\n    if (!isTransitionDefined(valueTransition)) {\n      options = _objectSpread(_objectSpread({}, options), getDefaultTransition(valueName, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n\n\n    if (options.duration) {\n      options.duration = secondsToMilliseconds(options.duration);\n    }\n\n    if (options.repeatDelay) {\n      options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n\n    if (!isOriginAnimatable || !isTargetAnimatable || instantAnimationState.current || valueTransition.type === false) {\n      /**\n       * If we can't animate this value, or the global instant animation flag is set,\n       * or this is simply defined as an instant transition, return an instant transition.\n       */\n      return createInstantAnimation(options);\n    }\n    /**\n     * Animate via WAAPI if possible.\n     */\n\n\n    if (value.owner && value.owner.current instanceof HTMLElement && !value.owner.getProps().onUpdate) {\n      var acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n      if (acceleratedAnimation) return acceleratedAnimation;\n    }\n    /**\n     * If we didn't create an accelerated animation, create a JS animation\n     */\n\n\n    return animateValue(options);\n  };\n};\n\nexport { animateMotionValue };","map":{"version":3,"names":["warning","secondsToMilliseconds","instantAnimationState","createAcceleratedAnimation","createInstantAnimation","getDefaultTransition","isAnimatable","getKeyframes","getValueTransition","isTransitionDefined","animateValue","animateMotionValue","valueName","value","target","transition","onComplete","valueTransition","delay","elapsed","keyframes","originKeyframe","targetKeyframe","length","isOriginAnimatable","isTargetAnimatable","options","velocity","getVelocity","ease","onUpdate","v","set","duration","repeatDelay","current","type","owner","HTMLElement","getProps","acceleratedAnimation"],"sources":["C:/Users/Manish/Desktop/Portfolio-Website-main/node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs"],"sourcesContent":["import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}