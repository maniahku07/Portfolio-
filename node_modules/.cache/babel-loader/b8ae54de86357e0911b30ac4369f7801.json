{"ast":null,"code":"import _classCallCheck from \"C:/Users/Manish/Desktop/Projects/Portfolio-Website-main/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Manish/Desktop/Projects/Portfolio-Website-main/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Manish/Desktop/Projects/Portfolio-Website-main/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Manish/Desktop/Projects/Portfolio-Website-main/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n  if (!handler) return;\n  var syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n\nvar PressGesture = /*#__PURE__*/function (_Feature) {\n  _inherits(PressGesture, _Feature);\n\n  var _super = _createSuper(PressGesture);\n\n  function PressGesture() {\n    var _this;\n\n    _classCallCheck(this, PressGesture);\n\n    _this = _super.apply(this, arguments);\n    _this.removeStartListeners = noop;\n    _this.removeEndListeners = noop;\n    _this.removeAccessibleListeners = noop;\n\n    _this.startPointerPress = function (startEvent, startInfo) {\n      _this.removeEndListeners();\n\n      if (_this.isPressing) return;\n\n      var props = _this.node.getProps();\n\n      var endPointerPress = function endPointerPress(endEvent, endInfo) {\n        if (!_this.checkPressEnd()) return;\n\n        var _this$node$getProps = _this.node.getProps(),\n            onTap = _this$node$getProps.onTap,\n            onTapCancel = _this$node$getProps.onTapCancel;\n\n        frame.update(function () {\n          /**\n           * We only count this as a tap gesture if the event.target is the same\n           * as, or a child of, this component's element\n           */\n          !isNodeOrChild(_this.node.current, endEvent.target) ? onTapCancel && onTapCancel(endEvent, endInfo) : onTap && onTap(endEvent, endInfo);\n        });\n      };\n\n      var removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n        passive: !(props.onTap || props[\"onPointerUp\"])\n      });\n      var removePointerCancelListener = addPointerEvent(window, \"pointercancel\", function (cancelEvent, cancelInfo) {\n        return _this.cancelPress(cancelEvent, cancelInfo);\n      }, {\n        passive: !(props.onTapCancel || props[\"onPointerCancel\"])\n      });\n      _this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n\n      _this.startPress(startEvent, startInfo);\n    };\n\n    _this.startAccessiblePress = function () {\n      var handleKeydown = function handleKeydown(keydownEvent) {\n        if (keydownEvent.key !== \"Enter\" || _this.isPressing) return;\n\n        var handleKeyup = function handleKeyup(keyupEvent) {\n          if (keyupEvent.key !== \"Enter\" || !_this.checkPressEnd()) return;\n          fireSyntheticPointerEvent(\"up\", function (event, info) {\n            var _this$node$getProps2 = _this.node.getProps(),\n                onTap = _this$node$getProps2.onTap;\n\n            if (onTap) {\n              frame.update(function () {\n                return onTap(event, info);\n              });\n            }\n          });\n        };\n\n        _this.removeEndListeners();\n\n        _this.removeEndListeners = addDomEvent(_this.node.current, \"keyup\", handleKeyup);\n        fireSyntheticPointerEvent(\"down\", function (event, info) {\n          _this.startPress(event, info);\n        });\n      };\n\n      var removeKeydownListener = addDomEvent(_this.node.current, \"keydown\", handleKeydown);\n\n      var handleBlur = function handleBlur() {\n        if (!_this.isPressing) return;\n        fireSyntheticPointerEvent(\"cancel\", function (cancelEvent, cancelInfo) {\n          return _this.cancelPress(cancelEvent, cancelInfo);\n        });\n      };\n\n      var removeBlurListener = addDomEvent(_this.node.current, \"blur\", handleBlur);\n      _this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n    };\n\n    return _this;\n  }\n\n  _createClass(PressGesture, [{\n    key: \"startPress\",\n    value: function startPress(event, info) {\n      this.isPressing = true;\n\n      var _this$node$getProps3 = this.node.getProps(),\n          onTapStart = _this$node$getProps3.onTapStart,\n          whileTap = _this$node$getProps3.whileTap;\n      /**\n       * Ensure we trigger animations before firing event callback\n       */\n\n\n      if (whileTap && this.node.animationState) {\n        this.node.animationState.setActive(\"whileTap\", true);\n      }\n\n      if (onTapStart) {\n        frame.update(function () {\n          return onTapStart(event, info);\n        });\n      }\n    }\n  }, {\n    key: \"checkPressEnd\",\n    value: function checkPressEnd() {\n      this.removeEndListeners();\n      this.isPressing = false;\n      var props = this.node.getProps();\n\n      if (props.whileTap && this.node.animationState) {\n        this.node.animationState.setActive(\"whileTap\", false);\n      }\n\n      return !isDragActive();\n    }\n  }, {\n    key: \"cancelPress\",\n    value: function cancelPress(event, info) {\n      if (!this.checkPressEnd()) return;\n\n      var _this$node$getProps4 = this.node.getProps(),\n          onTapCancel = _this$node$getProps4.onTapCancel;\n\n      if (onTapCancel) {\n        frame.update(function () {\n          return onTapCancel(event, info);\n        });\n      }\n    }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var props = this.node.getProps();\n      var removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, {\n        passive: !(props.onTapStart || props[\"onPointerStart\"])\n      });\n      var removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n      this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      this.removeStartListeners();\n      this.removeEndListeners();\n      this.removeAccessibleListeners();\n    }\n  }]);\n\n  return PressGesture;\n}(Feature);\n\nexport { PressGesture };","map":{"version":3,"names":["extractEventInfo","addDomEvent","addPointerEvent","Feature","pipe","isDragActive","isNodeOrChild","noop","frame","fireSyntheticPointerEvent","name","handler","syntheticPointerEvent","PointerEvent","PressGesture","arguments","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","props","node","getProps","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","update","current","target","removePointerUpListener","window","passive","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","handleKeydown","keydownEvent","key","handleKeyup","keyupEvent","event","info","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","animationState","setActive","removePointerListener","removeFocusListener"],"sources":["C:/Users/Manish/Desktop/Projects/Portfolio-Website-main/node_modules/framer-motion/dist/es/gestures/press.mjs"],"sourcesContent":["import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n"],"mappings":";;;;AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,OAAT,QAAwB,gCAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,KAAT,QAAsB,wBAAtB;;AAEA,SAASC,yBAAT,CAAmCC,IAAnC,EAAyCC,OAAzC,EAAkD;EAC9C,IAAI,CAACA,OAAL,EACI;EACJ,IAAMC,qBAAqB,GAAG,IAAIC,YAAJ,CAAiB,YAAYH,IAA7B,CAA9B;EACAC,OAAO,CAACC,qBAAD,EAAwBZ,gBAAgB,CAACY,qBAAD,CAAxC,CAAP;AACH;;IACKE,Y;;;;;EACF,wBAAc;IAAA;;IAAA;;IACV,2BAASC,SAAT;IACA,MAAKC,oBAAL,GAA4BT,IAA5B;IACA,MAAKU,kBAAL,GAA0BV,IAA1B;IACA,MAAKW,yBAAL,GAAiCX,IAAjC;;IACA,MAAKY,iBAAL,GAAyB,UAACC,UAAD,EAAaC,SAAb,EAA2B;MAChD,MAAKJ,kBAAL;;MACA,IAAI,MAAKK,UAAT,EACI;;MACJ,IAAMC,KAAK,GAAG,MAAKC,IAAL,CAAUC,QAAV,EAAd;;MACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAWC,OAAX,EAAuB;QAC3C,IAAI,CAAC,MAAKC,aAAL,EAAL,EACI;;QACJ,0BAA+B,MAAKL,IAAL,CAAUC,QAAV,EAA/B;QAAA,IAAQK,KAAR,uBAAQA,KAAR;QAAA,IAAeC,WAAf,uBAAeA,WAAf;;QACAvB,KAAK,CAACwB,MAAN,CAAa,YAAM;UACf;AACpB;AACA;AACA;UACoB,CAAC1B,aAAa,CAAC,MAAKkB,IAAL,CAAUS,OAAX,EAAoBN,QAAQ,CAACO,MAA7B,CAAd,GACMH,WAAW,IAAIA,WAAW,CAACJ,QAAD,EAAWC,OAAX,CADhC,GAEME,KAAK,IAAIA,KAAK,CAACH,QAAD,EAAWC,OAAX,CAFpB;QAGH,CARD;MASH,CAbD;;MAcA,IAAMO,uBAAuB,GAAGjC,eAAe,CAACkC,MAAD,EAAS,WAAT,EAAsBV,eAAtB,EAAuC;QAAEW,OAAO,EAAE,EAAEd,KAAK,CAACO,KAAN,IAAeP,KAAK,CAAC,aAAD,CAAtB;MAAX,CAAvC,CAA/C;MACA,IAAMe,2BAA2B,GAAGpC,eAAe,CAACkC,MAAD,EAAS,eAAT,EAA0B,UAACG,WAAD,EAAcC,UAAd;QAAA,OAA6B,MAAKC,WAAL,CAAiBF,WAAjB,EAA8BC,UAA9B,CAA7B;MAAA,CAA1B,EAAkG;QAAEH,OAAO,EAAE,EAAEd,KAAK,CAACQ,WAAN,IAAqBR,KAAK,CAAC,iBAAD,CAA5B;MAAX,CAAlG,CAAnD;MACA,MAAKN,kBAAL,GAA0Bb,IAAI,CAAC+B,uBAAD,EAA0BG,2BAA1B,CAA9B;;MACA,MAAKI,UAAL,CAAgBtB,UAAhB,EAA4BC,SAA5B;IACH,CAvBD;;IAwBA,MAAKsB,oBAAL,GAA4B,YAAM;MAC9B,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,YAAD,EAAkB;QACpC,IAAIA,YAAY,CAACC,GAAb,KAAqB,OAArB,IAAgC,MAAKxB,UAAzC,EACI;;QACJ,IAAMyB,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD,EAAgB;UAChC,IAAIA,UAAU,CAACF,GAAX,KAAmB,OAAnB,IAA8B,CAAC,MAAKjB,aAAL,EAAnC,EACI;UACJpB,yBAAyB,CAAC,IAAD,EAAO,UAACwC,KAAD,EAAQC,IAAR,EAAiB;YAC7C,2BAAkB,MAAK1B,IAAL,CAAUC,QAAV,EAAlB;YAAA,IAAQK,KAAR,wBAAQA,KAAR;;YACA,IAAIA,KAAJ,EAAW;cACPtB,KAAK,CAACwB,MAAN,CAAa;gBAAA,OAAMF,KAAK,CAACmB,KAAD,EAAQC,IAAR,CAAX;cAAA,CAAb;YACH;UACJ,CALwB,CAAzB;QAMH,CATD;;QAUA,MAAKjC,kBAAL;;QACA,MAAKA,kBAAL,GAA0BhB,WAAW,CAAC,MAAKuB,IAAL,CAAUS,OAAX,EAAoB,OAApB,EAA6Bc,WAA7B,CAArC;QACAtC,yBAAyB,CAAC,MAAD,EAAS,UAACwC,KAAD,EAAQC,IAAR,EAAiB;UAC/C,MAAKR,UAAL,CAAgBO,KAAhB,EAAuBC,IAAvB;QACH,CAFwB,CAAzB;MAGH,CAlBD;;MAmBA,IAAMC,qBAAqB,GAAGlD,WAAW,CAAC,MAAKuB,IAAL,CAAUS,OAAX,EAAoB,SAApB,EAA+BW,aAA/B,CAAzC;;MACA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;QACrB,IAAI,CAAC,MAAK9B,UAAV,EACI;QACJb,yBAAyB,CAAC,QAAD,EAAW,UAAC8B,WAAD,EAAcC,UAAd;UAAA,OAA6B,MAAKC,WAAL,CAAiBF,WAAjB,EAA8BC,UAA9B,CAA7B;QAAA,CAAX,CAAzB;MACH,CAJD;;MAKA,IAAMa,kBAAkB,GAAGpD,WAAW,CAAC,MAAKuB,IAAL,CAAUS,OAAX,EAAoB,MAApB,EAA4BmB,UAA5B,CAAtC;MACA,MAAKlC,yBAAL,GAAiCd,IAAI,CAAC+C,qBAAD,EAAwBE,kBAAxB,CAArC;IACH,CA5BD;;IA7BU;EA0Db;;;;WACD,oBAAWJ,KAAX,EAAkBC,IAAlB,EAAwB;MACpB,KAAK5B,UAAL,GAAkB,IAAlB;;MACA,2BAAiC,KAAKE,IAAL,CAAUC,QAAV,EAAjC;MAAA,IAAQ6B,UAAR,wBAAQA,UAAR;MAAA,IAAoBC,QAApB,wBAAoBA,QAApB;MACA;AACR;AACA;;;MACQ,IAAIA,QAAQ,IAAI,KAAK/B,IAAL,CAAUgC,cAA1B,EAA0C;QACtC,KAAKhC,IAAL,CAAUgC,cAAV,CAAyBC,SAAzB,CAAmC,UAAnC,EAA+C,IAA/C;MACH;;MACD,IAAIH,UAAJ,EAAgB;QACZ9C,KAAK,CAACwB,MAAN,CAAa;UAAA,OAAMsB,UAAU,CAACL,KAAD,EAAQC,IAAR,CAAhB;QAAA,CAAb;MACH;IACJ;;;WACD,yBAAgB;MACZ,KAAKjC,kBAAL;MACA,KAAKK,UAAL,GAAkB,KAAlB;MACA,IAAMC,KAAK,GAAG,KAAKC,IAAL,CAAUC,QAAV,EAAd;;MACA,IAAIF,KAAK,CAACgC,QAAN,IAAkB,KAAK/B,IAAL,CAAUgC,cAAhC,EAAgD;QAC5C,KAAKhC,IAAL,CAAUgC,cAAV,CAAyBC,SAAzB,CAAmC,UAAnC,EAA+C,KAA/C;MACH;;MACD,OAAO,CAACpD,YAAY,EAApB;IACH;;;WACD,qBAAY4C,KAAZ,EAAmBC,IAAnB,EAAyB;MACrB,IAAI,CAAC,KAAKrB,aAAL,EAAL,EACI;;MACJ,2BAAwB,KAAKL,IAAL,CAAUC,QAAV,EAAxB;MAAA,IAAQM,WAAR,wBAAQA,WAAR;;MACA,IAAIA,WAAJ,EAAiB;QACbvB,KAAK,CAACwB,MAAN,CAAa;UAAA,OAAMD,WAAW,CAACkB,KAAD,EAAQC,IAAR,CAAjB;QAAA,CAAb;MACH;IACJ;;;WACD,iBAAQ;MACJ,IAAM3B,KAAK,GAAG,KAAKC,IAAL,CAAUC,QAAV,EAAd;MACA,IAAMiC,qBAAqB,GAAGxD,eAAe,CAAC,KAAKsB,IAAL,CAAUS,OAAX,EAAoB,aAApB,EAAmC,KAAKd,iBAAxC,EAA2D;QAAEkB,OAAO,EAAE,EAAEd,KAAK,CAAC+B,UAAN,IAAoB/B,KAAK,CAAC,gBAAD,CAA3B;MAAX,CAA3D,CAA7C;MACA,IAAMoC,mBAAmB,GAAG1D,WAAW,CAAC,KAAKuB,IAAL,CAAUS,OAAX,EAAoB,OAApB,EAA6B,KAAKU,oBAAlC,CAAvC;MACA,KAAK3B,oBAAL,GAA4BZ,IAAI,CAACsD,qBAAD,EAAwBC,mBAAxB,CAAhC;IACH;;;WACD,mBAAU;MACN,KAAK3C,oBAAL;MACA,KAAKC,kBAAL;MACA,KAAKC,yBAAL;IACH;;;;EApGsBf,O;;AAuG3B,SAASW,YAAT"},"metadata":{},"sourceType":"module"}